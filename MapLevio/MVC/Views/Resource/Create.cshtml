@model Domaine.resource

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutBack.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm("Create", "Resource",FormMethod.Post,new {enctype="multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="well1 white">
            <div class="form-floating ng-pristine ng-invalid ng-invalid-required ng-valid-email ng-valid-url ng-valid-pattern" novalidate="novalidate" ng-submit="submit()">

                <h4>resource</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="form-group">
                    @Html.LabelFor(model => model.nom, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.nom, new { htmlAttributes = new { @class = "form-control1 ng-invalid ng-invalid-required ng-touched" } })
                        @Html.ValidationMessageFor(model => model.nom, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.prenom, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.prenom, new { htmlAttributes = new { @class = "form-control1 ng-invalid ng-invalid-required ng-touched" } })
                        @Html.ValidationMessageFor(model => model.prenom, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control1 ng-invalid ng-invalid-required ng-touched" } })
                        @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.password, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.password, new { htmlAttributes = new { @class = "form-control1 ng-invalid ng-invalid-required ng-touched" } })
                        @Html.ValidationMessageFor(model => model.password, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.dateNaissance, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.dateNaissance, new { htmlAttributes = new { @class = "form-control datepicker", type = "date" } })
                        @Html.ValidationMessageFor(model => model.dateNaissance, "", new { @class = "text-danger" })
                    </div>
                </div>


                <div class="form-group">
                    @Html.LabelFor(model => model.rue, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.rue, new { htmlAttributes = new { @class = "form-control1 ng-invalid ng-invalid-required ng-touched" } })
                        @Html.ValidationMessageFor(model => model.rue, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ville, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ville, new { htmlAttributes = new { @class = "form-control1 ng-invalid ng-invalid-required ng-touched" } })
                        @Html.ValidationMessageFor(model => model.ville, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.pays, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.pays, new { htmlAttributes = new { @class = "form-control1 ng-invalid ng-invalid-required ng-touched" } })
                        @Html.ValidationMessageFor(model => model.pays, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.codePostal, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.codePostal, new { htmlAttributes = new { @class = "form-control1 ng-invalid ng-invalid-required ng-touched" } })
                        @Html.ValidationMessageFor(model => model.codePostal, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.competance, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(m => m.competance, ((List<string>)ViewBag.list).Select(m => new SelectListItem { Text = m, Value = m }), new { @class = "form-control1 ng-invalid ng-invalid-required ng-touched" })
                        @Html.ValidationMessageFor(model => model.competance, "", new { @class = "text-danger" })
                        </div>
                    </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.resourceType, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(m => m.resourceType, ((List<string>)ViewBag.list1).Select(m => new SelectListItem { Text = m, Value = m }), new { @class = "form-control1 ng-invalid ng-invalid-required ng-touched" })
                        @Html.ValidationMessageFor(model => model.resourceType, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.seniority, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.seniority, new { htmlAttributes = new { @class = "form-control1 ng-invalid ng-invalid-required ng-touched" } })
                        @Html.ValidationMessageFor(model => model.seniority, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.image, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBox("file", null, new { type = "file" })
                        @Html.ValidationMessageFor(model => model.image, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
                </div>
            </div>
            </div>
            }

            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>
